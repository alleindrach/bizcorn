server:
    port: 8762
    session:
        timeout: 10
    tomcat:
        uri-encoding: UTF-8

spring:
    application:
        name: service
    cloud:
        config:
            label: master
            profile: dev
        discovery:
            enabled: true
            service-id: config-server
#      uri: http://localhost:8888/
        stream:
            kafka:
                binder:
                    brokers: 192.168.2.233:9092
                    zk-nodes: 192.168.2.233:2181
    kafka:
        bootstrap-servers: 192.168.2.233:9092
        template:
            default-topic: bizcorn-user
        listener:
            concurrency: 3
        producer:
            batch-size: 1000
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
        consumer:
            group-id: bizcorn
            auto-offset-reset: latest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    datasource:
        url: jdbc:mysql://192.168.2.177:3306/bizcorn
        username: root
        password: 123456
        driver-class-name: com.mysql.jdbc.Driver
        max-idle: 10
        max-wait: 10000
        min-idle: 5
        initial-size: 5
#自动提交
        default-auto-commit: true
#指定updates是否自动提交
        auto-commit: true
        validation-query: SELECT 1
        test-on-borrow: false
        test-while-idle: true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 18800
# 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000

#redis
    redis:
        host: 192.168.2.233
        port: 6379
        #password=bigdata123
        #database=15
        timeout: 5000
        pool:
            maxTotal: 8
            maxWaitMillis: 1000

mybatis:
#    mapperLocations: classpath:mappers/*.xml
#    type-aliases-package: ${package}.entity
    configuration:
#    # 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。
#        lazy-loading-enabled: false
    # 使全局的映射器启用或禁用缓存
        cacheEnabled: true
#    # 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。
#        aggressive-lazy-loading: false
#    # 是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true
#        multiple-result-sets-enabled: true
#    # 是否可以使用列的别名 (取决于驱动的兼容性) default:true
#        use-column-label: true
#    # 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false
#        use-generated-keys: false
#    # 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
#        auto-mapping-behavior: partial
#    # 这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）
#        default-executor-type: simple
    # 使用驼峰命名法转换字段。
        mapUnderscoreToCamelCase: true
#    # 设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session
#        local-cache-scope: session
#    # 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型
#        jdbc-type-for-null: 'null'



eureka:
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
        fetch-registry: true
        registry-fetch-interval-seconds: 8

    instance:
        prefer-ip-address: true
        lease-renewal-interval-in-seconds: 4
        lease-expiration-duration-in-seconds: 12


management:
    endpoints:
        web:
            exposure:
                include: refresh,health,bus-refresh


logging:
    level:
        root: WARN
        org.springframework.web: INFO
        org.springframework.web.socket: DEBUG
        org.springframework.security: DEBUG
        com.memorynotfound: DEBUG
        allein.service: DEBUG
        allein.service.exception: DEBUG
bizcorn:
    session:
        timeout: 1800
        prefix: uid
        cookie:
            name: session
            user: uid
        attribute:
            user: user
            timeout: timeout

#
#endpoints:
#  refresh:
#    sensitive: false