<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>bizcorn</artifactId>
        <groupId>allein</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>allein.bizcorn</groupId>
    <artifactId>service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>service</name>
    <description>Demo project for Spring Boot</description>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-bus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>allein.bizcorn</groupId>
            <artifactId>common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.penggle</groupId>
            <artifactId>kaptcha</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>
                        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8089
                    </jvmArguments>
                    <!--<arguments>-->
                    <!--&#45;&#45;server.port=8063-->
                    <!--</arguments>-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <!-- 输出目录(默认java.io.tmpdir) -->
                    <outputDir>entity</outputDir>
                    <!-- 是否覆盖同名文件(默认false) -->
                    <fileOverride>true</fileOverride>
                    <!-- mapper.xml 中添加二级缓存配置(默认true) -->
                    <enableCache>true</enableCache>
                    <!-- 开发者名称 -->
                    <author>allein</author>
                    <!-- 是否开启 ActiveRecord 模式(默认true) -->
                    <activeRecord>false</activeRecord>
                    <!-- 数据源配置，( **必配** ) -->
                    <dataSource>
                        <driverName>com.mysql.jdbc.Driver</driverName>
                        <url>jdbc:mysql://192.168.2.177:3306/for8j_aadai?useUnicode=true&amp;useSSL=false</url>
                        <username>root</username>
                        <password>123456</password>
                    </dataSource>
                    <strategy>
                        <!-- 字段生成策略，四种类型，从名称就能看出来含义：
                            nochange(默认),
                            underline_to_camel,(下划线转驼峰)
                            remove_prefix,(去除第一个下划线的前部分，后面保持不变)
                            remove_prefix_and_camel(去除第一个下划线的前部分，后面转驼峰) -->
                        <naming>underline_to_camel</naming>
                        <!-- 表前缀 -->
                        <tablePrefix>xx</tablePrefix>
                        <!--Entity中的ID生成策略（默认 id_worker）-->
                        <idGenType>uuid</idGenType>
                        <!--自定义超类-->
                        <!--<superServiceClass>com.baomidou.base.BaseService</superServiceClass>-->
                        <!-- 要包含的表 与exclude 二选一配置-->
                        <!--<include>-->
                        <!--<property>sec_user</property>-->
                        <!--<property>table1</property>-->
                        <!--</include>-->
                        <!-- 要排除的表 -->
                        <!--<exclude>-->
                        <!--<property>schema_version</property>-->
                        <!--</exclude>-->
                    </strategy>
                    <packageInfo>
                        <!-- 父级包名称，如果不写，下面的service等就需要写全包名(默认com.baomidou) -->
                        <parent>allein</parent>
                        <!--service包名(默认service)-->
                        <service>service</service>
                        <!--serviceImpl包名(默认service.impl)-->
                        <serviceImpl>service.impl</serviceImpl>
                        <!--entity包名(默认entity)-->
                        <entity>entity</entity>
                        <!--mapper包名(默认mapper)-->
                        <mapper>mapper</mapper>
                        <!--xml包名(默认mapper.xml)-->
                        <xml>mapper.xml</xml>
                    </packageInfo>
                    <template>
                        <!-- 定义controller模板的路径 -->
                        <!--<controller>/template/controller1.java.vm</controller>-->
                    </template>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.38</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

</project>
